<!-- otp.ejs -->

<style>
  .otp-form {
    width: 300px;
    margin: 0 auto;
  }

  .otp-label {
    font-size: 16px;
    margin-bottom: 8px;
  }

  .otp-input {
    width: 100%;
    padding: 8px;
    font-size: 14px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
    margin-bottom: 16px;
  }

  .otp-submit-btn {
    background-color: #4caf50;
    color: white;
    padding: 10px 16px;
    font-size: 14px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  .otp-submit-btn:hover {
    background-color: #45a049;
  }
</style>

<div class="otp-form">
  <form action="/verifyotp" method="POST">
    <label class="otp-label" for="otp">Enter OTP:</label>
    <input class="otp-input" type="text" id="otp" name="otp" required />
    <button class="otp-submit-btn" type="submit">Submit</button>
  </form>
</div>

<script>
  // Function to handle the verification of user by reset token
  function verifyotp() {
    // Get the reset token value entered by the user
    const resetToken = document.getElementById("resetToken").value;

    // Send an HTTP POST request to the server to verify the user
    fetch("/verifyotp", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ resetToken }),
    })
      .then((response) => response.json())
      .then((data) => {
        // Handle the response from the server
        if (data.Status === 1) {
          // User verified successfully
          // Display a success message or redirect to a success page
          alert(data.Message);
        } else {
          // Invalid or expired reset token
          // Display an error message to the user
          alert(data.Message);
        }
      })
      .catch((error) => {
        // Handle any error that occurred during the request
        console.error("Error:", error);
      });
  }
</script>
